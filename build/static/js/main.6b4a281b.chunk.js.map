{"version":3,"sources":["components/Code.js","components/UI.js","App.js","serviceWorker.js","index.js"],"names":["Option","Select","Code","props","data","setData","useState","codes","setCodes","useEffect","axios","get","then","res","console","log","Object","values","showSearch","style","width","placeholder","optionFilterProp","onChange","value","onFocus","onBlur","onSearch","val","map","key","UI","mode","setMode","code","read","pick","ends","view","warp","warpDinier","weft","weftDinier","setRead","setPick","setWidth","setEnds","setWarp","setWeft","rateWarp","setRateWarp","rateWeft","setRateWeft","yarnRate","setYarnRate","sellingRate","setSellingRate","weight","setWeight","warpValue","setWarpValue","weftValue","setWeftValue","foundCode","setFoundCode","temp_read","parseFloat","toString","temp_pick","temp_width","temp_warp_value","temp_warp","temp_weft_value","temp_weft","className","defaultValue","type","textAlign","readOnly","inputmode","backgroundColor","e","data1","target","float","onClick","message","loading","foundCodeFromData","success","error","danger","App","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.6b4a281b.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { Select } from 'antd';\r\nimport './Code.css';\r\nimport axios from 'axios';\r\nconst { Option } = Select;\r\n\r\nfunction Code(props) {\r\n  const { data, setData } = props;\r\n  const [codes, setCodes] = useState([]);\r\n  // const [currentCode, setCurrentCode] = useState(null);\r\n\r\n  useEffect(() => {\r\n    axios.get('https://script.google.com/macros/s/AKfycbwyKPzFJjmlnZGNly6dYgnKExNIpZnb-qyFOrVsC7k7jlxtq5l8/exec?getCode=true')\r\n      .then(res => {\r\n        console.log(Object.values(res.data.codes))\r\n        setCodes(Object.values(res.data.codes));\r\n      })\r\n    // return () => {\r\n    //   cleanup\r\n    // }\r\n  }, [])\r\n\r\n  // const getData = () => {\r\n  // }\r\n\r\n  function onChange(value) {\r\n    console.log(`selected ${value}`);\r\n    // setCurrentCode(value);\r\n    axios.get('https://script.google.com/macros/s/AKfycbwyKPzFJjmlnZGNly6dYgnKExNIpZnb-qyFOrVsC7k7jlxtq5l8/exec?code=' + value)\r\n      .then(res => {\r\n        console.log('getting this', res.data);\r\n        setData(res.data);\r\n      })\r\n    // getData();\r\n  }\r\n\r\n  function onBlur() {\r\n    // console.log('blur');\r\n  }\r\n\r\n  function onFocus() {\r\n    // console.log('focus');\r\n  }\r\n\r\n  function onSearch(val) {\r\n    // console.log('search:', val);\r\n  }\r\n  return (\r\n    <div>\r\n      <div >\r\n        <p>\r\n          Code:\r\n        </p>\r\n      </div>\r\n      <div>\r\n        <center>\r\n          <Select\r\n            showSearch\r\n            style={{ width: '100%' }}\r\n            placeholder=\"Select a quality code\"\r\n            optionFilterProp=\"children\"\r\n            onChange={onChange}\r\n            onFocus={onFocus}\r\n            onBlur={onBlur}\r\n            onSearch={onSearch}\r\n          // filterOption={(input, option) =>\r\n          //   option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n          // }\r\n          >\r\n            {codes && codes.map((key) => (\r\n              <Option value={key} key={key}>{key}</Option>\r\n            ))}\r\n          </Select>\r\n        </center>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Code\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Select, Input, message, Button } from 'antd';\r\nimport './UI.css';\r\nimport Code from \"./Code\";\r\nimport axios from 'axios';\r\nconst { Option } = Select;\r\n\r\n\r\nfunction UI() {\r\n  const [mode, setMode] = useState(true);//true = online and false = offline\r\n  const [data, setData] = useState({ code: \"\", read: \"\", pick: \"\", width: \"\", ends: \"\", view: \"\", warp: \"\", warpDinier: \"\", weft: \"\", weftDinier: \"\" });\r\n  const [read, setRead] = useState();\r\n  const [pick, setPick] = useState();\r\n  const [width, setWidth] = useState();\r\n  const [ends, setEnds] = useState();\r\n  const [warp, setWarp] = useState();\r\n  const [weft, setWeft] = useState();\r\n  const [rateWarp, setRateWarp] = useState();\r\n  const [rateWeft, setRateWeft] = useState();\r\n  const [yarnRate, setYarnRate] = useState();\r\n  const [sellingRate, setSellingRate] = useState();\r\n  const [weight, setWeight] = useState();\r\n  const [warpValue, setWarpValue] = useState();\r\n  const [weftValue, setWeftValue] = useState();\r\n  const [foundCode, setFoundCode] = useState(false);\r\n  useEffect(() => {\r\n    return\r\n  }, [mode]);\r\n\r\n  useEffect(() => {\r\n    console.log(data);\r\n\r\n    //OnLoom Read\r\n    let temp_read = parseFloat(data['read']);\r\n    temp_read = temp_read - 4;\r\n    setRead(temp_read.toString());\r\n    //OnLoom Pick\r\n    let temp_pick = parseFloat(data['pick']);\r\n    temp_pick = temp_pick - 4;\r\n    setPick(temp_pick.toString());\r\n    //OnLoom Width\r\n    let temp_width = parseFloat(data['width']);\r\n    temp_width = temp_width + 2.5;\r\n    setWidth(temp_width.toString());\r\n    //Ends\r\n    if (temp_read >= 0 && temp_width >= 0) {\r\n      let temp_ends = temp_read * temp_width;\r\n      setEnds(temp_ends.toString());\r\n    }\r\n    return\r\n  }, [data])\r\n\r\n  function handleSellingRate(e) {\r\n    setSellingRate(e.target.value);\r\n  }\r\n\r\n  const success = () => {\r\n    message.success('This is a success message');\r\n  };\r\n\r\n  useEffect(() => {\r\n    // return () => {\r\n    let temp_warp_value = (parseFloat(data['ends']) * parseFloat(data['warpDinier']) * 110) / 9000000;\r\n    let temp_warp = temp_warp_value * rateWarp;\r\n    setWarpValue(temp_warp_value);\r\n    setWeight(temp_warp_value + weftValue)\r\n    // console.log(\"temp_warp\", temp_warp);\r\n    setYarnRate((temp_warp + parseFloat(weft)).toString());\r\n    setWarp(temp_warp);\r\n    // console.log('warpValue', warpValue)\r\n    // }\r\n  })//, [data, rateWarp])\r\n\r\n  const handleClick = () => {\r\n    message.loading(\"Searching the code...\");\r\n    // if (data['read'] != \"0\" && data['pick'] != \"0\" && data['width'] != \"0\" && data['read'] != \"\" && data['pick'] != \"\" && data['width'] != \"\") {\r\n    axios.get(\"https://script.google.com/macros/s/AKfycbwyKPzFJjmlnZGNly6dYgnKExNIpZnb-qyFOrVsC7k7jlxtq5l8/exec?findCodeFromData=true&read=\" + data['read'] + \"&pick=\" + data['pick'] + \"&width=\" + data['width'])\r\n      .then(res => {\r\n        console.log(res)\r\n        if (res.data.foundCodeFromData !== false) {\r\n          message.success('Code found');\r\n          setFoundCode(true);\r\n          setData(res.data.foundCodeFromData);\r\n        } else {\r\n          message.error(\"No such code found\");\r\n        }\r\n      })\r\n    // }\r\n  }\r\n\r\n  function handleWarpMethod(e) {\r\n    setRateWarp(e.target.value);\r\n    // console.log('hello wrap', e.target.value)\r\n  }\r\n\r\n  useEffect(() => {\r\n    // return () => {\r\n    let temp_weft_value = ((parseFloat(data['weftDinier']) + 5) * pick * (parseFloat(data['width']) + 7)) / 90000;\r\n\r\n    let temp_weft = temp_weft_value * rateWeft;\r\n    setWeftValue(temp_weft_value);\r\n    setWeight(temp_weft_value + warpValue);\r\n    // console.log(temp_weft);\r\n    setYarnRate((temp_weft + parseFloat(warp)).toString());\r\n    setWeft(temp_weft);\r\n    console.log('weftValue', temp_weft_value, temp_weft);\r\n    // }\r\n  })//, [rateWeft, data])\r\n\r\n  function handleWeftMethod(e) {\r\n    setRateWeft(e.target.value);\r\n  }\r\n\r\n  function handleChange(value) {\r\n    console.log(`selected ${value}`);\r\n    setMode(value === \"true\");\r\n  }\r\n\r\n  const onReadChange = (e) => {\r\n    let data1 = { ...data };\r\n    data1['read'] = e.target.value;\r\n    setData(data1);\r\n  }\r\n  const onPickChange = (e) => {\r\n    let data1 = { ...data };\r\n    data1['pick'] = e.target.value;\r\n    setData(data1);\r\n  }\r\n  const onWidthChange = (e) => {\r\n    let data1 = { ...data };\r\n    data1['width'] = e.target.value;\r\n    setData(data1);\r\n  }\r\n  const onEndChange = (e) => {\r\n    let data1 = { ...data };\r\n    data1['ends'] = e.target.value;\r\n    setData(data1);\r\n  }\r\n  const onWarpDinierChange = (e) => {\r\n    let data1 = { ...data };\r\n    data1['warpDinier'] = e.target.value;\r\n    setData(data1);\r\n  }\r\n  const onWeftDinierChange = (e) => {\r\n    let data1 = { ...data };\r\n    data1['weftDinier'] = e.target.value;\r\n    setData(data1);\r\n  }\r\n\r\n  return (\r\n    <div className=\"main\">\r\n      <div>\r\n        <div>\r\n          <p >\r\n            Select Mode:\r\n          </p>\r\n        </div>\r\n        <div>\r\n          <p>\r\n            <center>\r\n              <Select defaultValue=\"true\" style={{ width: '100%' }} onChange={handleChange}>\r\n                <Option value=\"true\">Online</Option>\r\n                <Option value=\"false\">Offline</Option>\r\n              </Select>\r\n            </center>\r\n          </p>\r\n        </div>\r\n      </div>\r\n      <div>\r\n        {/* {mode} */}\r\n        {mode && <Code data={data} setData={setData} />}\r\n      </div>\r\n      <div className=\"topMargin\">\r\n        {mode && foundCode && <Input type=\"text\" value={\"Current Code: \" + data['code']} style={{ textAlign: \"center\" }} readOnly />}\r\n      </div>\r\n      <div className=\"topMargin\">\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th></th>\r\n              <th>Read</th>\r\n              <th>Pick</th>\r\n              <th>Width</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td style={{ width: \"20%\" }}>ON Table:</td>\r\n              <td><Input type=\"number\" inputmode=\"tel\" style={{ width: \"100%\", backgroundColor: \"#589DD1\" }} value={data['read']} onChange={onReadChange} /></td>\r\n              <td><Input type=\"number\" inputmode=\"tel\" style={{ width: \"100%\", backgroundColor: \"#FEE89B\" }} value={data['pick']} onChange={onPickChange} /></td>\r\n              <td><Input type=\"number\" inputmode=\"tel\" style={{ width: \"100%\", backgroundColor: \"#F6C8AD\" }} value={data['width']} onChange={onWidthChange} /></td>\r\n            </tr>\r\n            <tr>\r\n              <td style={{ width: \"20%\" }}>ON Loom:</td>\r\n              <td><Input type=\"number\" inputmode=\"tel\" style={{ width: \"100%\", backgroundColor: \"#589DD1\" }} value={read} readOnly /></td>\r\n              <td><Input type=\"number\" inputmode=\"tel\" style={{ width: \"100%\", backgroundColor: \"#FEE89B\" }} value={pick} readOnly /></td>\r\n              <td><Input type=\"number\" inputmode=\"tel\" style={{ width: \"100%\", backgroundColor: \"#F6C8AD\" }} value={width} readOnly /></td>\r\n            </tr>\r\n            <br />\r\n            <tr>\r\n              <td style={{ width: \"20%\" }}>ENDS:</td>\r\n              <td><Input type=\"number\" inputmode=\"tel\" style={{ width: \"100%\", backgroundColor: \"#FBD0CF\" }} value={ends} readOnly /></td>\r\n              <td><Input type=\"number\" inputmode=\"tel\" style={{ width: \"100%\", backgroundColor: \"#FBD0CF\" }} value={data['ends']} onChange={onEndChange} /></td>\r\n              {mode && <td style={{ float: \"right\" }}><Button type=\"primary\" onClick={handleClick} danger>Find</Button></td>}\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      {mode && (<div className=\"topMargin\">\r\n        <table >\r\n          <thead>\r\n            <tr>\r\n              <th>Warp:</th>\r\n              <th>Weft:</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td><Input type=\"text\" style={{ width: \"100%\" }} value={data['warp']} readOnly /></td>\r\n              <td><Input type=\"text\" style={{ width: \"100%\" }} value={data['weft']} readOnly /></td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>)}\r\n      <div className=\"topMargin\">\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th></th>\r\n              <th>Warp</th>\r\n              <th>Weft</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td style={{ width: \"20%\" }}>YARN:</td>\r\n              <td><Input type=\"number\" inputmode=\"tel\" style={{ width: \"100%\", backgroundColor: \"#C7E4CA\" }} value={data['warpDinier']} onChange={onWarpDinierChange} /></td>\r\n              <td><Input type=\"number\" inputmode=\"tel\" style={{ width: \"100%\", backgroundColor: \"#C7E4CA\" }} value={data['weftDinier']} onChange={onWeftDinierChange} /></td>\r\n            </tr>\r\n            <tr>\r\n              <td style={{ width: \"20%\" }}>RATE:</td>\r\n              <td><Input type=\"number\" inputmode=\"tel\" style={{ width: \"100%\", backgroundColor: \"#BCE1F7\" }} onChange={handleWarpMethod} value={rateWarp} /></td>\r\n              <td><Input type=\"number\" inputmode=\"tel\" style={{ width: \"100%\", backgroundColor: \"#BCE1F7\" }} onChange={handleWeftMethod} value={rateWeft} /></td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      <div className=\"topMargin\">\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>Yarn Rate</th>\r\n              <th>Selling Rate</th>\r\n              <th>GST</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td><Input type=\"number\" inputmode=\"tel\" style={{ width: \"100%\", backgroundColor: \"#6EB546\" }} value={yarnRate} readOnly /></td>\r\n              <td><Input type=\"number\" inputmode=\"tel\" style={{ width: \"100%\", backgroundColor: \"#4A6AB2\" }} value={sellingRate} onChange={handleSellingRate} /></td>\r\n              <td><Input type=\"number\" inputmode=\"tel\" style={{ width: \"100%\", backgroundColor: \"#4A6AB2\" }} value={parseFloat(sellingRate) * 5 / 100 + parseFloat(sellingRate)} readOnly /></td>\r\n            </tr>\r\n            <tr>\r\n              <td><Input type=\"number\" inputmode=\"tel\" style={{ width: \"100%\" }} value={parseFloat(yarnRate) / 100} readOnly /></td>\r\n              <td><Input type=\"number\" inputmode=\"tel\" style={{ width: \"100%\", backgroundColor: \"#6EB546\" }} value={(parseFloat(sellingRate) - (parseFloat(yarnRate) / 100))} readOnly /></td>\r\n              <td><Input type=\"number\" inputmode=\"tel\" style={{ width: \"100%\", backgroundColor: \"#6EB546\" }} value={(parseFloat(sellingRate) * 5 / 100 + parseFloat(sellingRate)) - (parseFloat(yarnRate) / 100)} readOnly /></td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      <div className=\"topMargin\">\r\n        <table >\r\n          <thead>\r\n            <tr>\r\n              <th>Weight:</th>\r\n              <th>GSM:</th>\r\n              {mode && <th>View:</th>}\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td><Input type=\"number\" inputmode=\"tel\" style={{ width: \"100%\" }} value={weight} readOnly /></td>\r\n              <td><Input type=\"number\" inputmode=\"tel\" style={{ width: \"100%\" }} value={parseFloat(weight) / parseFloat(data['width']) * 393.6} readOnly /></td>\r\n              {mode && <td><Input type=\"text\" style={{ width: \"100%\" }} value={data['view']} readOnly /></td>}\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      <div className=\"topMargin\">\r\n        <table >\r\n          <thead>\r\n            <tr>\r\n              <th>Warp Value:</th>\r\n              <th>Weft Value:</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td><Input type=\"number\" inputmode=\"tel\" style={{ width: \"100%\" }} value={warpValue} readOnly /></td>\r\n              <td><Input type=\"number\" inputmode=\"tel\" style={{ width: \"100%\" }} value={weftValue} readOnly /></td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UI\r\n","import React from 'react';\r\n// import logo from './logo.svg';\r\nimport './App.css';\r\nimport UI from './components/UI';\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <UI />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport 'antd/dist/antd.css';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}